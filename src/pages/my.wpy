<style lang="less">
  .tab-container {
  height: 100%;
  width: 100%;
  border: 1rpx solid #ffcc00;
  position: absolute;
  left: 0;
  top: 0;
  display: flex;
  flex-direction: column;
}
</style>

<template>
  <view>
    <view>
      <open-data type="userAvatarUrl" class="user-avatar"></open-data>
      <open-data type="userNickName"></open-data>
    </view>
    <view>{{netResult}}</view>
    <button @tap="onClick">Http Request</button>
    <avatar-group :groupName="test1" :groupData.sync="favorites" />
    <avatar-group :groupName="test1" :groupData.sync="favorites" />
    <wxc-loadmore text="正在努力加载中..." icon="https://s10.mogucdn.com/mlcdn/c45406/171018_8gj08gbl9fj6igb380dec9k1ifhe2_32x32.png">
    </wxc-loadmore>
    <wxc-loadmore is-end="{{true}}"></wxc-loadmore>
  </view>
</template>

<script>
  import wepy from 'wepy';
  // import Avatar from '../components/avatar';
  import AvatarGroup from '../components/avatar-group';
  // import request from 'wepy-better-request';

  import requestMixin from '../mixins/request';

  export default class MyPage extends wepy.page {
    config = {
      navigationBarTitleText: 'My Page',
      enablePullDownRefresh: true, //是否开启下拉刷新
      backgroundTextStyle: "dark",
      usingComponents: {
        'wxc-loadmore': '../packages/@minui/wxc-loadmore/dist/index'
      }
    };
    components = {
      'avatar-group': AvatarGroup
      // avatar: Avatar
    };
    mixins = [requestMixin];

    data = {
      netResult: null,
      test1: 'Hello',
      test2: 'Section Title',
      favorites: [],
      avatars: [{
          name: 'Test Category1',
          list: [{
            name: '11111',
            id: 1
          }]
        },
        {
          name: 'Test Category2',
          list: []
        }
      ],
      articles: [], // 要加载的数据集合
      noMoreData: false,
      isLoading: false, // 是否在加载中
      page: 1 // 页数 给予默认值1
    };
    methods = {
      func1() {
        console.log('func1');
      },
      func2() {
        console.log('func2');
      },
      onClick: function (e) {
        const self = this;
        console.log(
          `ComponentId:${e.detail.componentId},you selected:${e.detail.key}`
        );
      }
    };

    events = {
      'avatar-tap-event': (p1, p2, p3, p4, $event) => {
        console.log('p1,p2,p3,p4,$event', p1, p2, p3, p4, $event);
        this.$navigate('avatar-detail');
      }
    };

    onLoad() {
      const self = this;
      self
        .http({
          url: '/style-list.php?time=1&t=css&c=Nw==&i=1'
        })
        .then(d => {
          self.netResult = d.code;
          console.log('d.data.styles is: ', d.data.styles);
          self.favorites = d.data.styles;
          self.test1 = 'Hello';
          self.test2 = 'world';
          self.$apply();
        })
        .catch(err => {

        });
    }

    async onPullDownRefresh() {
      console.log('onPullDownRefresh')
      console.log('重新加载')
      this.noMoreData = false
      this.page = 1
      return await this.getArticles(this.page, true)
      wepy.stopPullDownRefresh();
      this.$apply();
    }

    async onReachBottom() {
      console.log('onReachBottom')
      // 如果没有更多数据， 或者正在加载，直接返回
      if (this.noMoreData || this.isLoading) {
        return
      }
      // 开始请求之前设置 isLoading 为true
      this.isLoading = true
      this.page = this.page + 1
      await this.getArticles(this.page, false)
      this.$apply();
    }

    async getArticles(page = 1, reset = false) {
      console.log('getArticles');

      // let response
      // try {
      //   response = await api.request({
      //     url: "articles",
      //     data: {
      //       page: page,
      //       weid: 7
      //     }
      //   })
      //   let article = response.data.data;
      //   console.log(response)
      //   // console.log(article)
      //   // console.log(reset)
      //   // 如果传入参数 reset 为true，则覆盖 topics
      //   this.articles = reset ? article : this.articles.concat(article)
      //   // this.articles = reset ?this.articles : this.articles.concat(this.articles)

      //   // console.log(this.articles);
      //   let current_page = response.data.current_page
      //   let total = response.data.total
      //   console.log("current_page=" + current_page + ",total=" + total)
      //   // 根据分页设置是否还有更多数据
      //   if (current_page === total) {
      //     console.log("无更多")
      //     this.noMoreData = true
      //   }
      // } catch (err) {
      //   console.log(err);
      // }
      // this.$apply()
      // return response

    }

  }

</script>
