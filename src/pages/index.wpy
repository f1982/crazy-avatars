<style lang="less">
.userinfo {
  display: flex;
  flex-direction: column;
  align-items: center;
}

.userinfo-avatar {
  width: 80rpx;
  height: 80rpx;
  border-radius: 50%;
}

.userinfo-nickname {
  color: #aaa;
}
</style>
<template>
  <view class="container">
    <wxc-dialog class="wxc-dialog" title="标题" content="高柱当前状态、信息和解决方法" confirm-text="主操作" cancel-text="辅助操作" @confirm="onConfirm"
          @cancel="onCancel(0)"></wxc-dialog>
    <view class="userinfo" @tap="handleViewTap">
      <image class="userinfo-avatar" src="{{ userInfo.avatarUrl }}" background-size="cover"/>
      <view class="userinfo-nickname">{{ userInfo.nickName }}</view>
    </view>

    <panel>
      <view class="title" slot="title">测试数据绑定</view>
      <text class="info">{{normalTitle}}</text>
      <text class="info">{{setTimeoutTitle}}</text>
      <text class="info">{{mixin}}</text>
      <text class="info">{{mynum}}</text>
      <text class="info">{{now}}</text>
      <text class="info">{{num}}</text>
      <text class="info">{{asyncNum}}</text>
      <text class="info">{{sumNum}}</text>
      <button @tap="plus('a')" size="mini">  +  </button>
    </panel>

    <panel>
      <view class="title" slot="title">我的测试</view>
      <button @tap="dialog" size="mini">Mindialog</button>
     
      <wxc-countdown countdown="{{10000}}" format="hh:mm:ss"></wxc-countdown>

      <button @tap="goTabbarPage" size="mini">到其他页面</button>
    </panel>

    <panel>
      <view class="title" slot="title">其它测试</view>
      <button @tap="toast" size="mini">第三方组件</button>
      <button @tap="communicate" size="mini">组件通信</button>
      <button @tap="tap" size="mini">混合TAP事件</button>
    </panel>

    <panel>
      <view class="title" slot="title">测试并发网络请求</view>
      <view>返回结果: <text>{{netrst}}</text></view>
      <button @tap="request" size="mini"> 点我发起10个请求 </button>
    </panel>

    <panel>
      <view class="title" slot="title">测试组件</view>

      <text class="testcounter">计数组件1: </text>
      <view class="counterview">
        <counter1 @index-emit.user="counterEmit" ></counter1>
      </view>

      <text class="testcounter">计数组件2: </text>

      <view class="counterview">
        <counter2 :num.sync="mynum"></counter2>
      </view>
    </panel>

    <panel>
      <view class="title" slot="title">测试组件Repeat</view>
      <repeat for="{{groupList}}" index="index" item="item" key="key">
        <group :grouplist="item" :index="index"></group>
      </repeat>
    </panel>

    <panel>
      <view class="title" slot="title">测试列表</view>
      <list></list>
    </panel>

    <toast />
  </view>
</template>

<script>
import wepy from 'wepy';
import { connect } from 'wepy-redux';
import Panel from '@/components/panel'; // alias example
import Counter from 'counter'; // alias example
import List from '../components/list'; // aliasFields example
import moduleA from 'module-a'; // aliasFields ignore module example
import Group from '../components/group';
import Toast from 'wepy-com-toast';
import testMixin from '../mixins/test';
import requestMixin from '../mixins/request';

console.log('moduleA ignored: ', moduleA); // => moduleA ignored: {}

@connect({
  num(state) {
    return state.counter.num;
  },
  asyncNum(state) {
    return state.counter.asyncNum;
  },
  sumNum(state) {
    return state.counter.num + state.counter.asyncNum;
  }
})
export default class Index extends wepy.page {
  config = {
    navigationBarTitleText: 'test',
    usingComponents: {
      'wxc-dialog': '../packages/@minui/wxc-dialog/dist/index',
      'wxc-countdown': '../packages/@minui/wxc-countdown/dist/index',
      'wxc-tab': '../packages/@minui/wxc-tab/dist/index',
      'wxc-tab-panel': '../packages/@minui/wxc-tab/dist/panel'
    }
  };
  components = {
    panel: Panel,
    counter1: Counter,
    counter2: Counter,
    list: List,
    group: Group,
    toast: Toast
  };

  mixins = [testMixin, requestMixin];

  data = {
    test: 0,
    mynum: 20,
    userInfo: {
      nickName: '加载中...'
    },
    normalTitle: '原始标题',
    setTimeoutTitle: '标题三秒后会被修改',
    count: 0,
    netrst: '',
    groupList: [
      {
        id: 1,
        name: '点击改变',
        list: [
          {
            childid: '1.1',
            childname: '子项，点我改变'
          },
          {
            childid: '1.2',
            childname: '子项，点我改变'
          },
          {
            childid: '1.3',
            childname: '子项，点我改变'
          }
        ]
      },
      {
        id: 2,
        name: '点击改变',
        list: [
          {
            childid: '2.1',
            childname: '子项，点我改变'
          },
          {
            childid: '2.2',
            childname: '子项，点我改变'
          },
          {
            childid: '2.3',
            childname: '子项，点我改变'
          }
        ]
      },
      {
        id: 3,
        name: '点击改变',
        list: [
          {
            childid: '3.1',
            childname: '子项，点我改变'
          }
        ]
      }
    ]
  };

  computed = {
    now() {
      return +new Date();
    }
  };

  methods = {
    plus() {
      this.mynum++;
    },
    toast() {
      let promise = this.$invoke('toast', 'show', {
        title: '自定义标题',
        img:
          'https://raw.githubusercontent.com/kiinlam/wetoast/master/images/star.png'
      });

      promise.then(d => {
        console.log('toast done');
      });
    },

    goTabbarPage() {
      console.log('tabbar');
      this.$redirect('./tabbar-page');
    },
    // Dialog component
    dialog() {
      console.log('dialog is: ');
      console.log('this.$wxpage is: ', this.$wxpage);
      let dialogComponent = this.$wxpage.selectComponent('.wxc-dialog');
      dialogComponent && dialogComponent.show();
    },
    onConfirm(){
      let dialogComponent = this.$wxpage.selectComponent('.wxc-dialog');
      dialogComponent && dialogComponent.hide();
    },
    onCancel(){
      let dialogComponent = this.$wxpage.selectComponent('.wxc-dialog');
      dialogComponent && dialogComponent.hide();
    },

    tap() {
      console.log('do noting from ' + this.$name);
    },
    communicate() {
      console.log(this.$name + ' tap');

      this.$invoke('counter2', 'minus', 45, 6);
      this.$invoke('counter1', 'plus', 45, 6);

      this.$broadcast('index-broadcast', 1, 3, 4);
    },
    request() {
      let self = this;
      let i = 10;
      let map = [
        'MA==',
        'MQo=',
        'Mg==',
        'Mw==',
        'NA==',
        'NQ==',
        'Ng==',
        'Nw==',
        'OA==',
        'OQ=='
      ];
      while (i--) {
        wepy.request({
          url:
            'https://www.madcoder.cn/tests/sleep.php?time=1&t=css&c=' +
            map[i] +
            '&i=' +
            i,
          success: function(d) {
            self.netrst += d.data + '.';
            self.$apply();
          }
        });
      }
    },
    counterEmit(...args) {
      let $event = args[args.length - 1];
      console.log(
        `${this.$name} receive ${$event.name} from ${$event.source.$name}`
      );
    }
  };

  events = {
    'index-emit': (...args) => {
      let $event = args[args.length - 1];
      console.log(
        `${this.$name} receive ${$event.name} from ${$event.source.$name}`
      );
    }
  };

  onLoad() {
    let self = this;
    this.$parent.getUserInfo(function(userInfo) {
      if (userInfo) {
        self.userInfo = userInfo;
      }
      self.normalTitle = '标题已被修改';

      self.setTimeoutTitle = '标题三秒后会被修改';
      setTimeout(() => {
        self.setTimeoutTitle = '到三秒了';
        self.$apply();
      }, 3000);

      self.$apply();
    });

  
    //
    self
      .http({
        url: '/style-list2.php?time=1&t=css&c=Nw==&i=1'
      })
      .then(response => {
        // statusCode === 200 的逻辑
        console.log('data is: ', response.data);
        let d = response.data;
        self.netResult = d.code;
        self.favorites = d.data.styles;
        self.$apply();
      })
      .catch(err => {
        // statusCode非200，或者其他错误处理
      });
  }

  onShow() {
    // this.testRequest();
  }
}
</script>
